(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[6557],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1758:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:2},c="Deposit method",l={unversionedId:"documentation/deposit/method",id:"documentation/deposit/method",isDocsHomePage:!1,title:"Deposit method",description:"Ethereum Account model",source:"@site/docs/documentation/deposit/method.md",sourceDirName:"documentation/deposit",slug:"/documentation/deposit/method",permalink:"/docs/documentation/deposit/method",editUrl:"https://github.com/everFinance/docs/edit/master/docs/documentation/deposit/method.md",version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"documentation",previous:{title:"Introduction",permalink:"/docs/documentation/deposit/intro"},next:{title:"everPay Tx records on arweave",permalink:"/docs/documentation/deposit/record"}},p=[{value:"Ethereum Account model",id:"ethereum-account-model",children:[{value:"Blockchain wallets such as imToken / MetaMask",id:"blockchain-wallets-such-as-imtoken--metamask",children:[]},{value:"Via ethers.js",id:"via-ethersjs",children:[]},{value:"Via everpay-js",id:"via-everpay-js",children:[]}]},{value:"Arweave Account Model",id:"arweave-account-model",children:[{value:"Blockchain wallets such as arConnect",id:"blockchain-wallets-such-as-arconnect",children:[]},{value:"Via arweave.js",id:"via-arweavejs",children:[]},{value:"Via everpay-js",id:"via-everpay-js-1",children:[]}]}],u={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deposit-method"},"Deposit method"),(0,o.kt)("h2",{id:"ethereum-account-model"},"Ethereum Account model"),(0,o.kt)("h3",{id:"blockchain-wallets-such-as-imtoken--metamask"},"Blockchain wallets such as imToken / MetaMask"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"get everPay's multi-signature contract address in Ethereum via ",(0,o.kt)("a",{parentName:"li",href:"../server-api/basic-api/info"},"everpay server info API")," to get everPay's multi-signature contract address ",(0,o.kt)("inlineCode",{parentName:"li"},"ethLocker")," in Ethereum."),(0,o.kt)("li",{parentName:"ol"},"transfer the assets and amount you want to recharge to the ",(0,o.kt)("inlineCode",{parentName:"li"},"ethLocker")," multi-signature contract address via blockchain wallet tools like imToken / MetaMask"),(0,o.kt)("li",{parentName:"ol"},"wait for the transaction to be confirmed in 6 blocks"),(0,o.kt)("li",{parentName:"ol"},"via the ",(0,o.kt)("a",{parentName:"li",href:"../server-api/basic-api/balances"},"everpay server balances API")," to get information about the assets on everPay for the everPay account corresponding to this wallet")),(0,o.kt)("h3",{id:"via-ethersjs"},"Via ethers.js"),(0,o.kt)("p",null,"Pseudocode reference source: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/everFinance/everpay-js/blob/main/src/lib/ethereum.ts#L14"},"everpay-js src/lib/ethereum.ts#L14")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const transferAsync = async (ethConnectedSigner: Signer, {\n  symbol,\n  token,\n  from,\n  to,\n  value\n}: TransferAsyncParams): Promise<EthereumTransaction> => {\n  let transactionResponse: EthereumTransaction\n  if (symbol.toLowerCase() === 'eth') {\n    const transactionRequest = {\n      from: from.toLowerCase(),\n      to: to?.toLowerCase(),\n      value\n    }\n    transactionResponse = await ethConnectedSigner.sendTransaction(transactionRequest)\n  } else {\n    const tokenID = getTokenAddrByChainType(token, ChainType.ethereum)\n    const erc20RW = new Contract(tokenID.toLowerCase(), erc20Abi, ethConnectedSigner)\n    transactionResponse = await erc20RW.transfer(to, value)\n  }\n  return transactionResponse\n}\n")),(0,o.kt)("h3",{id:"via-everpay-js"},"Via everpay-js"),(0,o.kt)("p",null,"everpay-js is now packaged open source, with ethers.js integrated inside, so developers don't need to care about ",(0,o.kt)("inlineCode",{parentName:"p"},"Token decimals"),", easy to integrate and use."),(0,o.kt)("p",null,"To use everpay-js for deposit, please refer to: ",(0,o.kt)("a",{parentName:"p",href:"../everpay-js/operation-api/deposit#ethereum-wallet-1"},"everpay-js deposit"),"."),(0,o.kt)("h2",{id:"arweave-account-model"},"Arweave Account Model"),(0,o.kt)("h3",{id:"blockchain-wallets-such-as-arconnect"},"Blockchain wallets such as arConnect"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"via the ",(0,o.kt)("a",{parentName:"li",href:"../server-api/basic-api/info"},"everpay server info API")," to get everPay's wallet address ",(0,o.kt)("inlineCode",{parentName:"li"},"arLocker")," which is managed by Arweave gated signature."),(0,o.kt)("li",{parentName:"ol"},"transfer the assets and the amount of token you want to deposit to the ",(0,o.kt)("inlineCode",{parentName:"li"},"arLocker")," address via a blockchain wallet tool like arConnect"),(0,o.kt)("li",{parentName:"ol"},"wait for 15 blocks of confirmation of the transaction"),(0,o.kt)("li",{parentName:"ol"},"via the ",(0,o.kt)("a",{parentName:"li",href:"../server-api/basic-api/balances"},"everpay server balances API")," to get the everPay account corresponding to this wallet and the asset information on everPay")),(0,o.kt)("h3",{id:"via-arweavejs"},"Via arweave.js"),(0,o.kt)("p",null,"Pseudocode reference source: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/everFinance/everpay-js/blob/main/src/lib/arweave.ts#L102"},"everpay-js src/lib/arweave.ts#L102")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const transferAsync = async (arJWK: ArJWK, {\n  to,\n  value\n}: TransferAsyncParams): Promise<ArTransferResult> => {\n  const arweave = Arweave.init(options)\n\n  const transactionTransfer = await arweave.createTransaction({\n    target: to,\n    quantity: value.toString()\n  }, arJWK)\n  // The signature value is assigned directly to the original transaction\n  await arweave.transactions.sign(transactionTransfer, arJWK)\n  const responseTransfer = await arweave.transactions.post(transactionTransfer)\n  return responseTransfer\n}\n")),(0,o.kt)("h3",{id:"via-everpay-js-1"},"Via everpay-js"),(0,o.kt)("p",null,"everpay-js is now packaged open source, integrated with arweave.js, arConnect, developers do not need to care about ",(0,o.kt)("inlineCode",{parentName:"p"},"Token decimals"),", easy to integrate and use."),(0,o.kt)("p",null,"Use everpay-js for deposit, see: ",(0,o.kt)("a",{parentName:"p",href:"../everpay-js/operation-api/deposit#arweave-wallet-1"},"everpay-js deposit"),"."))}d.isMDXComponent=!0}}]);